database:
  info:
    ######################################### MySQL数据库 #############################################
    mysql:
      driverClass: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://@${ip}:${port}/${database}?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&ueSSL=false
      # 查询所有schemata
      databases: >
        SELECT schema_name as schemaName FROM information_schema.schemata

      # 查询指定schema下所有表
      tables: >
        select table_name as tableName, table_comment as tableComment
        from information_schema.tables 
        where table_schema = ?

      # 查询指定schema下指定表信息
      tableInfo: > # >表示多行，但忽略换行符
        select table_name as tableName, table_comment as tableComment
        from information_schema.tables 
        where table_schema= ? and table_name = ?

      # 查询指定schema下指定数据表字段信息
      tableStructure: >
        select column_name as columnName,data_type as columnType,
               column_comment as columnComment,is_nullable as isNullable,
               column_default as columnDefault,character_maximum_length as length,
               column_key as columnKey,extra as extra
        from information_schema.columns 
        where table_schema = ? and table_name = ?
    

    ######################################### Oracle数据库 #############################################
    oracle:
      driverClass: oracle.jdbc.OracleDriver
      url: jdbc:oracle:thin:@${ip}:${port}:${database}
      databases: >
        SELECT USERNAME as "schemaName" FROM ALL_USERS

      tables: >
        SELECT comm.TABLE_NAME as "tableName", comm.COMMENTS as "tableComment"
        FROM all_tables tab 
        inner join all_tab_comments comm 
        on tab.OWNER = comm.OWNER and tab.TABLE_NAME = comm.TABLE_NAME 
        WHERE tab.OWNER = ?

      tableInfo: >
        SELECT comm.TABLE_NAME as "tableName", comm.COMMENTS as "tableComment"
        FROM all_tables tab 
        inner join all_tab_comments comm 
        on tab.OWNER = comm.OWNER and tab.TABLE_NAME = comm.TABLE_NAME 
        WHERE tab.OWNER = ? and tab.TABLE_NAME = ?

      tableStructure: >
        SELECT col.COLUMN_NAME as "columnName", col.DATA_TYPE as "columnType",
        comm.COMMENTS as "columnComment", col.NULLABLE as "isNullable",
        col.DATA_DEFAULT as "columnDefault" 
        FROM all_tab_columns col 
        inner join ALL_COL_COMMENTS comm 
        on col.OWNER = comm.OWNER and col.TABLE_NAME = comm.TABLE_NAME 
        WHERE comm.owner = ? AND comm.TABLE_NAME = ?

    ######################################### DB2数据库 #############################################
    db2:
      driverClass: com.ibm.db2.jcc.DB2Driver
      url: jdbc:db2://${ip}:${port}/${database}
      databases: >
        SELECT SCHEMANAME as "schemaName" FROM SYSCAT.SCHEMATA

      tables: >
        SELECT TABNAME as "tableName", REMARKS as "tableComment"
        FROM SYSCAT.TABLES WHERE TABSCHEMA = ?

      tableInfo: >
        SELECT TABNAME as "tableName", REMARKS as "tableComment"
        FROM SYSCAT.TABLES 
        WHERE TABSCHEMA=? AND TABNAME=?

      tableStructure: >
        SELECT COLNAME as "columnName", TYPENAME "columnType",
        REMARKS as "columnComment", NULLS as "isNullable",
        DEFAULT as "columnDefault"
        FROM SYSCAT.COLUMNS 
        WHERE TABSCHEMA=? AND TABNAME=?

    #########################################  Postgresql 数据库 #############################################
    postgresql:
      driverClass: org.postgresql.Driver
      url: jdbc:postgresql://${ip}:${port}/${database}
      databases: >
        SELECT schema_name AS "schemaName" FROM information_schema.schemata;

      tables: >
        SELECT table_name as "tableName", obj_description(pg_class.oid) AS "tableComment"
        FROM information_schema.tables
        JOIN pg_class ON information_schema.tables.table_name = pg_class.relname
        WHERE table_schema = ? AND table_type = 'BASE TABLE'

      tableInfo: >
        SELECT table_name as "tableName", obj_description(pg_class.oid) AS "tableComment"
        FROM information_schema.tables
        JOIN pg_class ON information_schema.tables.table_name = pg_class.relname
        WHERE table_schema = ? and table_name = ? and table_type = 'BASE TABLE'

      tableStructure: >
        SELECT cols.column_name as "columnName", cols.data_type as "columnType",
            cols.column_default as "columnDefault",cols.is_nullable as "isNullable",
            character_maximum_length as length,
            (SELECT pg_catalog.col_description(c.oid, cols.ordinal_position::int)
             FROM pg_catalog.pg_class c
             WHERE c.relname = cols.table_name) AS "columnComment"
        FROM information_schema.columns cols
        WHERE cols.table_schema = ? AND cols.table_name = ?
